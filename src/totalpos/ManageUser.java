/*
 * ManageUser.java
 *
 * Created on 18-jul-2011, 15:26:57
 */

package totalpos;

import java.sql.SQLException;
import java.util.List;

/**
 *
 * @author Saúl Hidalgo
 */
public class ManageUser extends javax.swing.JInternalFrame {

    private List<User> users;
    private List<Profile> profiles;
    private int selectedUser = -1;
    public String newUserId = null;
    public boolean isOk = false;
    boolean creatingNewUser = false;

    /** Creates new form ManageUser
     * @param parent Padre de la nueva ventana.
     * @param modal Indica el estilo del Frame.
     */
    public ManageUser() {
        initComponents();
        System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Constructor invocado");
        updateAll();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        loginText = new javax.swing.JTextField();
        nombreText = new javax.swing.JTextField();
        apellidoText = new javax.swing.JTextField();
        roleCombo = new javax.swing.JComboBox();
        bloqueadoCheck = new javax.swing.JCheckBox();
        newPassword = new javax.swing.JPasswordField();
        newPassword2 = new javax.swing.JPasswordField();
        mustChangePasswordCheck = new javax.swing.JCheckBox();
        canChangePasswordCheck = new javax.swing.JCheckBox();
        newUserButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Usuarios");
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        labelTitle.setFont(new java.awt.Font("Courier New", 1, 18));
        labelTitle.setText("Usuarios");
        labelTitle.setName("labelTitle"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel2MouseMoved(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Courier New", 0, 11));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg"))); // NOI18N
        jLabel4.setText("Usuario");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Courier New", 0, 11));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg"))); // NOI18N
        jLabel5.setText("Nombre");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Courier New", 0, 11));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg"))); // NOI18N
        jLabel6.setText("Apellido");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel9.setFont(new java.awt.Font("Courier New", 0, 11));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg"))); // NOI18N
        jLabel9.setText("Perfil");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Courier New", 0, 11));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg"))); // NOI18N
        jLabel2.setText("Contraseña");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Courier New", 0, 11));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg"))); // NOI18N
        jLabel3.setText("Contraseña de nuevo");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("*");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel7.setForeground(new java.awt.Color(255, 51, 0));
        jLabel7.setText("*");
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setForeground(new java.awt.Color(255, 51, 0));
        jLabel8.setText("*");
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel10.setForeground(new java.awt.Color(255, 51, 0));
        jLabel10.setText("*");
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setText("* = Campo Obligatorio");
        jLabel11.setName("jLabel11"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel7))
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addContainerGap())
        );

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel3MouseMoved(evt);
            }
        });

        loginText.setEditable(false);
        loginText.setName("loginText"); // NOI18N
        loginText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginTextKeyPressed(evt);
            }
        });

        nombreText.setName("nombreText"); // NOI18N
        nombreText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombreTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreTextKeyReleased(evt);
            }
        });

        apellidoText.setName("apellidoText"); // NOI18N
        apellidoText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                apellidoTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                apellidoTextKeyReleased(evt);
            }
        });

        roleCombo.setName("roleCombo"); // NOI18N
        roleCombo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                roleComboMouseMoved(evt);
            }
        });

        bloqueadoCheck.setText("Bloqueado");
        bloqueadoCheck.setName("bloqueadoCheck"); // NOI18N
        bloqueadoCheck.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                bloqueadoCheckMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                bloqueadoCheckMouseMoved(evt);
            }
        });
        bloqueadoCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloqueadoCheckActionPerformed(evt);
            }
        });

        newPassword.setName("newPassword"); // NOI18N
        newPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPasswordKeyPressed(evt);
            }
        });

        newPassword2.setName("newPassword2"); // NOI18N
        newPassword2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPassword2KeyPressed(evt);
            }
        });

        mustChangePasswordCheck.setText("Debe cambiar contraseña al iniciar sesión");
        mustChangePasswordCheck.setName("mustChangePasswordCheck"); // NOI18N
        mustChangePasswordCheck.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                mustChangePasswordCheckMouseMoved(evt);
            }
        });

        canChangePasswordCheck.setText("Puede cambiar contraseña.");
        canChangePasswordCheck.setName("canChangePasswordCheck"); // NOI18N
        canChangePasswordCheck.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                canChangePasswordCheckMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(roleCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mustChangePasswordCheck, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(bloqueadoCheck, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                    .addComponent(apellidoText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nombreText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPassword2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newPassword, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addComponent(canChangePasswordCheck, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apellidoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bloqueadoCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mustChangePasswordCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(canChangePasswordCheck)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        newUserButton.setText("Nuevo Usuario");
        newUserButton.setName("newUserButton"); // NOI18N
        newUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Guardar");
        saveButton.setName("saveButton"); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cerrar");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(newUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, saveButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton, newUserButton, saveButton});

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        userList.setFont(new java.awt.Font("Courier New", 0, 11));
        userList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        userList.setName("userList"); // NOI18N
        userList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                userListValueChanged(evt);
            }
        });
        userList.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                userListMouseMoved(evt);
            }
        });
        jScrollPane2.setViewportView(userList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelTitle))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void userListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_userListValueChanged
        if ( !creatingNewUser ){
            updateFields();
        }
        
    }//GEN-LAST:event_userListValueChanged

    private void bloqueadoCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloqueadoCheckActionPerformed
        
    }//GEN-LAST:event_bloqueadoCheckActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {

            System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Guardando");
            if ( !newPassword.getText().equals(newPassword2.getText()) ){
                MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Las contraseñas deben ser iguales.");
                msg.show(this);
                return;
            }

            if ( newPassword.getText().isEmpty() ){
                MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "La contraseña no puede ser vacía.");
                msg.show(this);
                return;
            }

            if (loginText.getText().isEmpty()) {
                MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "El login no puede ser vacío.");
                msg.show(this);
                return;
            }

            if ( creatingNewUser ){
                ConnectionDrivers.createUser(loginText.getText() , (String)roleCombo.getSelectedItem(), newPassword.getText());
            }
            ConnectionDrivers.changeProperties(loginText.getText(), nombreText.getText(), apellidoText.getText(), roleCombo.getSelectedItem().toString(), bloqueadoCheck.isSelected(), canChangePasswordCheck.isSelected() , mustChangePasswordCheck.isSelected());
            ConnectionDrivers.setPassword(loginText.getText(), Shared.hashPassword(newPassword.getText()));
            MessageBox msg = new MessageBox(MessageBox.SGN_SUCCESS, "Guardado satisfactoriamente");
            msg.show(this);
            newPassword.setText("");
            newPassword2.setText("");

            newUserId = loginText.getText();
            updateAll();
        } catch (SQLException ex) {
            if ( ex.getMessage().matches(Shared.getConfig("isDataRepeated")) ){
                MessageBox msb = new MessageBox(MessageBox.SGN_IMPORTANT, "Usuario ya existente. Intente otro.");
                msb.show(this);
            }else{
                MessageBox msb = new MessageBox(MessageBox.SGN_IMPORTANT, "Problemas con la base de datos.",ex);
                msb.show(this);
            }
        }catch (Exception ex) {
            MessageBox msb = new MessageBox(MessageBox.SGN_IMPORTANT, "Problemas al cambiar perfil.",ex);
            msb.show(this);
            this.dispose();
            Shared.reload();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void updateFields(){
        System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Actualizar campos");
        selectedUser = userList.getSelectedIndex();

        if ( selectedUser == -1 ){
            userList.setSelectedIndex(0);
            selectedUser = 0;
        }

        User u = users.get(selectedUser);
        loginText.setText(u.getLogin());
        nombreText.setText(u.getNombre());
        apellidoText.setText(u.getApellido());
        roleCombo.setSelectedIndex(profiles.indexOf(new Profile(u.getPerfil(),null)));
        bloqueadoCheck.setSelected(u.getBloqueado());
        mustChangePasswordCheck.setSelected(u.getDebeCambiarPassword());
        canChangePasswordCheck.setSelected(u.getPuedeCambiarPassword());
        newPassword.setText("");
        newPassword2.setText("");
    }

    private void newUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserButtonActionPerformed

        System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Creando nuevo usuario");
        if ( creatingNewUser ){
            updateAll();
            updateFields();
        }else{
            creatingNewUser = true;
            userList.setSelectedIndex(-1);

            userList.setEnabled(false);
            loginText.setEditable(true);
            loginText.setText("");
            newPassword.setText("");
            newPassword2.setText("");
            nombreText.setText("");
            apellidoText.setText("");
            bloqueadoCheck.setSelected(false);
            mustChangePasswordCheck.setSelected(false);
            canChangePasswordCheck.setSelected(false);
            loginText.requestFocus();

            newUserButton.setText("Cancelar Nuevo Usuario");
        }

    }//GEN-LAST:event_newUserButtonActionPerformed

    private void nombreTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTextKeyReleased
        if ( nombreText.getText().length() > 15 ){
            nombreText.setText(nombreText.getText().substring(0, 15));
        }
    }//GEN-LAST:event_nombreTextKeyReleased

    private void apellidoTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoTextKeyReleased
        if ( apellidoText.getText().length() > 15 ){
            apellidoText.setText(apellidoText.getText().substring(0, 15));
        }
    }//GEN-LAST:event_apellidoTextKeyReleased

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_formMouseMoved

    private void jPanel2MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_jPanel2MouseMoved

    private void jPanel3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_jPanel3MouseMoved

    private void loginTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginTextKeyPressed
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_loginTextKeyPressed

    private void newPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPasswordKeyPressed
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_newPasswordKeyPressed

    private void newPassword2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPassword2KeyPressed
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_newPassword2KeyPressed

    private void nombreTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreTextKeyPressed
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_nombreTextKeyPressed

    private void apellidoTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apellidoTextKeyPressed
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_apellidoTextKeyPressed

    private void roleComboMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roleComboMouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_roleComboMouseMoved

    private void bloqueadoCheckMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bloqueadoCheckMouseDragged

    }//GEN-LAST:event_bloqueadoCheckMouseDragged

    private void bloqueadoCheckMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bloqueadoCheckMouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_bloqueadoCheckMouseMoved

    private void mustChangePasswordCheckMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mustChangePasswordCheckMouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_mustChangePasswordCheckMouseMoved

    private void canChangePasswordCheckMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_canChangePasswordCheckMouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_canChangePasswordCheckMouseMoved

    private void userListMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListMouseMoved
        Shared.getScreenSaver().actioned();
    }//GEN-LAST:event_userListMouseMoved

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidoText;
    private javax.swing.JCheckBox bloqueadoCheck;
    private javax.swing.JCheckBox canChangePasswordCheck;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTextField loginText;
    private javax.swing.JCheckBox mustChangePasswordCheck;
    private javax.swing.JPasswordField newPassword;
    private javax.swing.JPasswordField newPassword2;
    private javax.swing.JButton newUserButton;
    private javax.swing.JTextField nombreText;
    private javax.swing.JComboBox roleCombo;
    private javax.swing.JButton saveButton;
    private javax.swing.JList userList;
    // End of variables declaration//GEN-END:variables

    private void updateUsers() throws SQLException {
        try{
            users = ConnectionDrivers.listUsers();
        } catch (Exception ex) {
            MessageBox msb = new MessageBox(MessageBox.SGN_IMPORTANT, "Problemas al listar los usuarios.",ex);
            msb.show(this);
            this.dispose();
            Shared.reload();
        }
    }

    private void updateList() {
        String l[] = new String[users.size()];
        int i = 0;
        for (User u : users) {
            l[i++] = u.getLogin();
        }

        
        userList.setListData(l);
    }

    private void updateAll() {
        System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Actualizar todo");
        try {
            updateProfiles();
            updateUsers();
            updateList();

            if ( newUserId == null ) {
                userList.setSelectedIndex(0);
            }
            else{
                for (int i = 0; i < users.size(); i++) {
                    if (users.get(i).getLogin().equals(newUserId)) {
                        userList.setSelectedIndex(i);
                        newUserId = null;
                        break;
                    }
                }
            }
            creatingNewUser = false;
            userList.setEnabled(true);
            isOk = true;
            newUserButton.setText("Nuevo Usuario");
        } catch (SQLException ex) {
            MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Problemas con la base de datos.", ex);
            msg.show(this);
        } catch (Exception ex) {
            MessageBox msb = new MessageBox(MessageBox.SGN_IMPORTANT, "Problemas al listar usuarios.",ex);
            msb.show(this);
            this.dispose();
            Shared.reload();
        }
    }

    private void updateProfiles() throws SQLException, Exception {
        profiles = Shared.updateProfiles(roleCombo,false);
    }

}
