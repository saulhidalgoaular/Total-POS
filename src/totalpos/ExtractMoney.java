/*
 * ExtractMoney.java
 *
 * Created on 15-ago-2011, 12:14:32
 */

package totalpos;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.JFrame;

/**
 *
 * @author Saúl Hidalgo
 */
public class ExtractMoney extends javax.swing.JDialog implements Doer{

    FiscalPrinter printer;
    private Working workingFrame;
    private Double curMoney;

    /** Creates new form ExtractMoney */
    public ExtractMoney(java.awt.Frame parent, boolean modal, FiscalPrinter print) {
        super(parent, modal);
        System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Invocado constructor");
        initComponents();
        printer = print;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idField = new javax.swing.JTextField();
        phoneLabel = new javax.swing.JLabel();
        moneyField = new javax.swing.JTextField();
        Nombre = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        cirifLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        cancelButton = new javax.swing.JButton();
        acceptButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Extraer Dinero de Caja");

        idField.setFont(new java.awt.Font("Courier New", 0, 12));
        idField.setName("idField"); // NOI18N
        idField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idFieldFocusLost(evt);
            }
        });
        idField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idFieldKeyPressed(evt);
            }
        });

        phoneLabel.setFont(new java.awt.Font("Courier New", 0, 12));
        phoneLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas.jpg"))); // NOI18N
        phoneLabel.setText("Dinero");
        phoneLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        phoneLabel.setName("phoneLabel"); // NOI18N

        moneyField.setFont(new java.awt.Font("Courier New", 0, 12));
        moneyField.setName("moneyField"); // NOI18N
        moneyField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                moneyFieldKeyPressed(evt);
            }
        });

        Nombre.setFont(new java.awt.Font("Courier New", 0, 12));
        Nombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas.jpg"))); // NOI18N
        Nombre.setText("Contraseña");
        Nombre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Nombre.setName("Nombre"); // NOI18N

        titleLabel.setFont(new java.awt.Font("Courier New", 1, 18));
        titleLabel.setText("Extraer Dinero de Caja");
        titleLabel.setName("titleLabel"); // NOI18N

        cirifLabel.setFont(new java.awt.Font("Courier New", 0, 12));
        cirifLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas.jpg"))); // NOI18N
        cirifLabel.setText("Usuario");
        cirifLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cirifLabel.setName("cirifLabel"); // NOI18N

        passwordField.setName("passwordField"); // NOI18N
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
        });

        cancelButton.setText("Cancelar");
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        acceptButton.setText("Aceptar");
        acceptButton.setName("acceptButton"); // NOI18N
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("* = Campo Obligatorio");
        jLabel11.setName("jLabel11"); // NOI18N

        jLabel9.setText("*");
        jLabel9.setName("jLabel9"); // NOI18N

        jLabel10.setText("*");
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel12.setText("*");
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setText("*");
        jLabel13.setName("jLabel13"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cirifLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(idField, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                            .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                            .addComponent(moneyField, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(143, 143, 143)
                        .addComponent(acceptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 77, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addGap(344, 344, 344)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cirifLabel)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nombre)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLabel)
                    .addComponent(moneyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(acceptButton)
                    .addComponent(jLabel11))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(76, Short.MAX_VALUE)
                    .addComponent(jLabel12)
                    .addContainerGap(76, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFieldFocusLost

}//GEN-LAST:event_idFieldFocusLost

    private void idFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idFieldKeyPressed
        if ( evt.getKeyCode() == KeyEvent.VK_ESCAPE ){
            this.dispose();
        }
}//GEN-LAST:event_idFieldKeyPressed

    private void moneyFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_moneyFieldKeyPressed
        if ( evt.getKeyCode() == KeyEvent.VK_ESCAPE ){
            this.dispose();
        }if ( evt.getKeyCode() == KeyEvent.VK_ENTER ){
            workingFrame = new Working((JFrame) Shared.getMyMainWindows());
            WaitSplash ws = new WaitSplash(this);

            Shared.centerFrame(workingFrame);
            workingFrame.setVisible(true);

            ws.execute();
            //doIt();
        }
}//GEN-LAST:event_moneyFieldKeyPressed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        workingFrame = new Working((JFrame) Shared.getMyMainWindows());
        WaitSplash ws = new WaitSplash(this);

        Shared.centerFrame(workingFrame);
        workingFrame.setVisible(true);

        ws.execute();
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        if ( evt.getKeyCode() == KeyEvent.VK_ESCAPE ){
            this.dispose();
        }
    }//GEN-LAST:event_passwordFieldKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Nombre;
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel cirifLabel;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField moneyField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void doIt() {
        System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Operando");
        if ( idField.getText().isEmpty() ){
            MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, "El usuario es obligatorio");
            msg.show(this);
            return;
        }else if ( moneyField.getText().isEmpty() ) {
            MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, "El campo de dinero no puede ser vacío");
            msg.show(this);
            return;
        }
        try{
            double p = Double.parseDouble(moneyField.getText().replace(',', '.'));

            curMoney = ConnectionDrivers.maximunMoney2Extract(Shared.getFileConfig("myId"));
            if ( p > curMoney || p <= 1.0){
                throw new NumberFormatException("");
            }

            if ( !ConnectionDrivers.existsUser(idField.getText().trim()) ){
                MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, "Usuario no existe");
                msg.show(this);
                passwordField.setEnabled(true);
                return;
            }

            if ( ConnectionDrivers.isLocked(idField.getText().trim()) ){
                MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, "Usuario bloqueado");
                msg.show(this);
                passwordField.setEnabled(true);
                return;
            }

            ConnectionDrivers.login(idField.getText(), passwordField.getPassword());

            User u = Shared.giveUser(ConnectionDrivers.listUsers(), idField.getText());
            if ( ConnectionDrivers.isAllowed(u.getPerfil(), "extractMoney") ){
                Shared.userInsertedPasswordOk(idField.getText());

                ConnectionDrivers.modifyMoney(-1*p);
                printer.extractMoney(u, idField.getText(), p);

                MessageBox msg = new MessageBox(MessageBox.SGN_SUCCESS, "Operación existosa!");
                msg.show(this);
                System.out.println("[" + Shared.now() + "] " + this.getClass().getName() + " " + Shared.lineNumber() +  " Se ha sacado el dinero");
            }else{
                MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, "El usuario no tiene permisos para extraer dinero de la caja.");
                msg.show(this);
            }
            this.dispose();

        } catch (SQLException ex) {
            MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, "Problemas con la base de datos",ex);
            msg.show(this);
        } catch ( NumberFormatException ex ){
            String msgExtra = " Se ha extraído todo el dinero de la caja";
            if ( Math.abs(curMoney) > 1.0 ){
                msgExtra = " La máxima cantidad de dinero que se puede extraer es " + Shared.df.format(curMoney) + " Bs";
            }
            MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, "El monto es inválido." + msgExtra );
            msg.show(this);
        } catch (Exception ex) {
            String kindErr = "";

            if ( Shared.getConfig("wrongPasswordMsg").equals(ex.getMessage()) ) {
                kindErr = Shared.getConfig("wrongPasswordMsg");
            }

            MessageBox msg = new MessageBox(MessageBox.SGN_CAUTION, kindErr,ex);
            msg.show(this);

            if ( ex.getMessage().equals(Shared.getConfig("wrongPasswordMsg")) ){
                try {
                    Shared.userTrying(idField.getText());
                } catch (Exception ex1) {
                    String userLocked = Shared.getConfig("userLocked");
                    msg = new MessageBox(MessageBox.SGN_DANGER,
                                (ex1.getMessage().equals(userLocked)? userLocked :"Error."),
                                ex1);
                    msg.show(null);
                    this.dispose();
                    Shared.reload();
                }
            }

        }
    }

    @Override
    public void close() {
        workingFrame.setVisible(false);
    }

}
